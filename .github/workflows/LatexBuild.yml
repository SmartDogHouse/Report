# This is a basic workflow to help you get started with Actions
name: Latek Build
on:
  push:
    branches: [ main ]
    tags:
      - '**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  BuildLatexJob:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Git repo
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2
        
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v2
        with:
          root_file: main.tex
          pre_compile: "tlmgr update --self --all"
          args: "-pdf -file-line-error -halt-on-error -interaction=nonstopmode -logfilewarninglist -Werror"
          post_compile: "latexmk -c"
      
      - name: Split log
        if: failure()
        shell: bash
        run: cat main.log | grep -n -E 'LaTeX Error|LaTeX Warning|Undefined' > small.log
      
      - name: Upload Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: Logs
          path: |
            main.log
            small.log
            
      - name: Print small log
        if: failure()
        shell: bash
        run: cat small.log >&2
        
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: main.pdf
          
      - name: Check if Git tag exists
        id: check_tag
        run: echo "::set-output name=HEAD_TAG::$(git describe --tags --exact-match HEAD)"
        #echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//} alternativa da testare?
        
      - name: Deploy only if tag is present
        shell: bash
        if: ${{steps.check_tag.outputs.HEAD_TAG != '' && success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --tags -f
          TAG=$(git describe --tags --exact-match HEAD)
          hub release create -m "$(git tag -l --format='%(contents)' "$TAG")" "$TAG" || true   
          for pdfs in *.pdf; do 
            echo "\n\nDelivering file $pdfs \n\n"
            hub release edit -m '' -a "$pdfs" "$TAG"
          done
          
  TelegramJobFailure:
      needs: [BuildLatexJob] #when finished this job
      if: failure() # if its failed
      runs-on: ubuntu-latest
      steps:
      - name: Clone Repo with Checkout 
        uses: actions/checkout@v2 # clones repo! Action implemented in this repository, tag "2"
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Artifacts
      - name: Send custom Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
              ${{ github.event_name }} event,
              on github.com/${{ github.repository }}, 
              by ${{ github.actor }}.
              /!\ FAILED /!\
          disable_web_page_preview: true
          document: small.log
          
  TelegramJobSuccess:
        if: success() #only on success
        needs: [BuildLatexJob] #when finished this job
        runs-on: ubuntu-latest
        steps:
        - name: Send custom Telegram message
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.TELEGRAM_TO }}
            token: ${{ secrets.TELEGRAM_TOKEN }}
            message: |
                ${{ github.event_name }} event,
                on github.com/${{ github.repository }}, 
                by ${{ github.actor }}.
                SUCCEDED
            disable_web_page_preview: true
            
  EmailJob:
    needs: [TelegramJobFailure] #when finished this job
    #if: failure() # if its failed
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repo with Checkout # first step
      uses: actions/checkout@v2 # clones repo! Action implemented in this repository, tag "2"
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: Artifacts
    - name: Send mail
      uses: dawidd6/action-send-mail@v3
      with:
        # Required mail server address:
        server_address: smtp.gmail.com
        # Required mail server port:
        server_port: 465
        # Required mail server username:
        username: ${{secrets.MAIL_USERNAME}}
        # Required mail server password:
        password: ${{secrets.MAIL_PASSWORD}}
        # Required mail subject:
        subject: Github Actions job result
        # Required recipients' addresses:
        to: heloce4170@itwbuy.com
        # Required sender full name (address can be skipped):
        from: SmartDoggo # <user@example.com>
        # Optional whether this connection use TLS (default is true if server_port is 465)
        secure: true
        # Optional plain body:
        body: Build job of ${{github.repository}} FAILED! Log in the annexes.
        # Optional carbon copy recipients:
        cc: gxe23786@eoopy.com
        # Optional recipient of the email response:
        reply_to: gxe23786@eoopy.com
        # Optional unsigned/invalid certificates allowance:
        ignore_cert: true
        # Optional converting Markdown to HTML (set content_type to text/html too):
        convert_markdown: true
        # Optional attachments:
        attachments: small.log
